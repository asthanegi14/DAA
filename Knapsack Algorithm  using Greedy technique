import java.util.*;
public class KnapsackAlgo {
    public static void main(String arg[])
    {
       Character item[]={'A','B','C','D','E'};
       Integer price[]={15,50,30,8,5};
       Integer weight[]={5,2,15,8,10};

       int capacity = 12;
       Double ppw[] = new Double[price.length];
       for(int i=0;i< price.length;i++)
       {
           ppw[i]=(double)price[i]/(double)weight[i];
       }
           for(int i=0;i< 5-1;i++)
           {
               for(int j=0;j< 5-i-1;j++)
               {
                   if(ppw[j]<ppw[j+1])
                   {
                       Double temp = ppw[j];
                       ppw[j] = ppw[j+1];
                       ppw[j+1] = temp;

                       Integer temp2 = price[j];
                       price[j]= price[j+1];
                       price[j+1]=temp2;

                       Integer temp3=weight[j];
                       weight[j]=weight[j+1];
                       weight[j+1]=temp3;

                       Character temp4 = item[j];
                       item[j]= item[j+1];
                       item[j+1]=temp4;
                   }
               }
           }
           Double profit= Double.valueOf(0);
            for(int i=0;i< ppw.length;i++)
            {
                if(capacity>weight[i])
                {
                    profit = profit+price[i];
                    capacity = capacity-weight[i];
                }
                else if(capacity<=0)
                {
                    capacity=0;
                    break;
                }
                else
                {
                    profit=profit+capacity*ppw[i];
                    capacity = capacity-weight[i];
                }
                System.out.println("Used items: "+item[i]);
            }

        System.out.println("remaining capacity: "+capacity);
        System.out.println("profit: "+profit);
    }
}
